# Tricky Tower 2차 발표 README

## 1. 간단한 게임 소개
Tricky Tower는 중력 기반 물리 엔진을 활용해 블록을 쌓아 올리는 전략형 퍼즐 게임입니다.  
(1차 발표에서 이미 소개한 내용을 간단히 상기시키는 수준으로 작성했습니다.)

## 2. 현재 진행 상황 (진행 정도 표시)
- **물리 엔진 구현**: 35%  
- **AABB 충돌 처리**: 0%  
- **터치 입력 (드래그·회전)**: 30%  
- **씬 전환 및 레벨 시스템**: 100%  
- **UI 레이아웃 및 UX 폴리싱**: 30%  
- **아트 에셋 통합**: 0%  
- **오디오 통합**: 0%  

## 3. Git 커밋 빈도 (github-insights-commits)
주차별 커밋 수를 통해 개발 활동을 시각화합니다.

| 주차   | 기간           | 커밋 수 |
|:-----:|:-------------:|:-------:|
| 1주차  | 4/8 – 4/14    | 0       |
| 2주차  | 4/15 – 4/21   | 0       |
| 3주차  | 4/22 – 4/28   | 0       |
| 4주차  | 4/29 – 5/5    | 0       |
| 5주차  | 5/6 – 5/12    | 0       |
| 6주차  | 5/13 – 5/19   | 9       |

### 오늘(2025-05-14) 커밋 내역
- `076d2ad`: GameScene 구현 및 블록 한 개 떨어짐  
- `f85b01e`: TitleScene 출력  
- `fc9f4cc`: 기본적 게임 뼈대 제작  
- `cd1213b`: 기존 쿠키런 삭제  
- `cbbc575`: Create 1차 README.txt  
- `797bd33`: Create README.md  
- `15be71f`: FrameWork 이식  
- `8b2f59a`: FrameWork 이식  
- `162509d`: TrickyTower Repository Create  

## 4. 목표 변경 사항
초기 설정한 “물리 엔진 완성 → 레벨 시스템 구현 → UI/UX 통합” 목표는 그대로 유지 중이며, 별도의 변경 사항은 없습니다.

## 5. MainScene 게임 오브젝트 개요

| 클래스       | 구성 정보                                    | 상호작용           | 핵심 코드 책임                                           |
|-------------|---------------------------------------------|-------------------|---------------------------------------------------------|
| `Block`     | `AnimSprite` 상속, `IBoxCollidable`, `ITouchable` 구현 | 드래그·회전 조작     | 위치·회전 업데이트, 충돌 범위 계산 및 안정성 검사               |
| `Button`    | `Sprite` 기반, `ITouchable` 구현                  | 클릭 (시작·재시도) | 터치 이벤트 감지 후 씬 전환 또는 게임 재시작 호출               |
| `Score`     | 텍스트 렌더링, `ILayerProvider` 구현             | —                 | 점수 집계 로직 및 화면 렌더링                                 |
| `Background`| `HorzScrollBackground` / `VertScrollBackground` | —                 | 배경 이미지 반복 그리기, 레이어 순서 관리                      |
